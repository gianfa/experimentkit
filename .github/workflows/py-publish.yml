# Publishing pipeline
# ref: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Publish Python distribution ðŸ“¦ to PyPI

on:
  push:
    branches:
      - 'main'
      - 'releases/**'
      - 'develop'
      # Test
      - 'feature/ppl-bump_on_pr*'

env:
  publishPackage: false

jobs:

  bump_version:
    name: Bump version
    if: github.ref == 'refs/heads/feature/ppl-bump_on_pr2'
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.13

    - name: Install poetry
      run: python -m pip install poetry==1.7.1

    - name: Configure poetry
      run: python -m poetry config virtualenvs.in-project true

    - name: Cache the virtualenv
      uses: actions/cache@v2
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Bump version
      run: |
        echo "$(pwd) ; $(ls .)"
        echo "tree ."
        poetry version patch

        git config --local user.email "gian.angelini@hotmail.com"
        git config --local user.name "gianfa"
        git add pyproject.toml poetry.lock
        git commit -m "bump to v$(poetry version --short)"
        git push


  build:
    name: Build distribution ðŸ“¦
    needs: bump_version
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: debug
      run: echo github.ref, echo github.event_name

    - name: Publish Package
      if: env.publishPackage == 'true'
      uses: celsiusnarhwal/poetry-publish@v2
      with:
        python-version: 3.9
        poetry-version: 1.7.0
        token: ${{ secrets.PYPI_TOKEN }}
        build: true
